``figure.add_axes()`` without arguments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Calling ``fig.add_axes()`` with no arguments will raise an error. Adding a
free-floating axes needs a position rectangle. If you want a figure-filling
single axes, use ``add_subplot()`` instead.

All parameters of `.Figure.subplots` except *nrows* and *ncols* are now keyword-only
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This avoids typing e.g. ``subplots(1, 1, 1)`` when meaning ``subplot(1, 1, 1)``,
but actually getting ``subplots(1, 1, sharex=1)``.

``add_subplot()`` validates its inputs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In particular, for ``add_subplot(rows, cols, index)``, all parameters must
be integral. Previously strings and floats were accepted and converted to
int.

``SubplotSpec.get_rows_columns``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use the ``GridSpec.nrows``, ``GridSpec.ncols``, ``SubplotSpec.rowspan``, and
``SubplotSpec.colspan`` properties instead.

``autofmt_xdate(which=None)``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use its more explicit synonym, ``which="major"``, instead.

`.pyplot.tight_layout` parameters are now keyword-only
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
All parameters of `.pyplot.tight_layout` are now keyword-only, to be consistent
with `.Figure.tight_layout`.
